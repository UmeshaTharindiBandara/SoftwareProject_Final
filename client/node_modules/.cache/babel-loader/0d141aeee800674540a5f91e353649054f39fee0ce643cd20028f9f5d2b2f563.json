{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\University_academic\\\\5th_semester\\\\EE5453_Software_Group_Project\\\\SoftwareProjectFinal\\\\SoftwareProject_Final\\\\client\\\\src\\\\components\\\\chat\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Chat.css\";\nimport { FaPaperPlane, FaUserCircle } from \"react-icons/fa\"; // Importing icons\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [user, setUser] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const fetchMessages = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/chat\");\n      const data = await response.json();\n      if (Array.isArray(data)) {\n        setMessages(data);\n      } else {\n        console.error(\"Fetched data is not an array:\", data);\n        setMessages([]);\n      }\n    } catch (error) {\n      console.error(\"Error fetching messages:\", error);\n    }\n  };\n  const sendMessage = async () => {\n    if (message.trim() === \"\") return; // Prevent empty messages\n    try {\n      await fetch(\"http://localhost:5000/api/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          user,\n          message\n        })\n      });\n      setMessage(\"\"); // Clear input\n      fetchMessages(); // Refresh messages\n    } catch (error) {\n      console.error(\"Error sending message:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchMessages();\n    const interval = setInterval(fetchMessages, 2000); // Poll every 2 seconds\n    return () => clearInterval(interval); // Cleanup on unmount\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Live Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.user, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), \" \", msg.message]\n      }, msg._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(FaUserCircle, {\n          className: \"user-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Your Name\",\n          value: user,\n          onChange: e => setUser(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type your message...\",\n          value: message,\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: /*#__PURE__*/_jsxDEV(FaPaperPlane, {\n            className: \"send-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"R+YUE6TEUZu+OuFs0WttrjFDrrA=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","FaPaperPlane","FaUserCircle","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","user","setUser","message","setMessage","fetchMessages","response","fetch","data","json","Array","isArray","console","error","sendMessage","trim","method","headers","body","JSON","stringify","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","_id","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/University_academic/5th_semester/EE5453_Software_Group_Project/SoftwareProjectFinal/SoftwareProject_Final/client/src/components/chat/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Chat.css\";\r\nimport { FaPaperPlane, FaUserCircle } from \"react-icons/fa\"; // Importing icons\r\n\r\nconst Chat = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [user, setUser] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const fetchMessages = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/chat\");\r\n      const data = await response.json();\r\n      \r\n      if (Array.isArray(data)) {\r\n        setMessages(data);\r\n      } else {\r\n        console.error(\"Fetched data is not an array:\", data);\r\n        setMessages([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching messages:\", error);\r\n    }\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    if (message.trim() === \"\") return; // Prevent empty messages\r\n    try {\r\n      await fetch(\"http://localhost:5000/api/chat\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ user, message }),\r\n      });\r\n      setMessage(\"\"); // Clear input\r\n      fetchMessages(); // Refresh messages\r\n    } catch (error) {\r\n      console.error(\"Error sending message:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchMessages();\r\n    const interval = setInterval(fetchMessages, 2000); // Poll every 2 seconds\r\n    return () => clearInterval(interval); // Cleanup on unmount\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <h2>Live Chat</h2>\r\n      <div className=\"chat-box\">\r\n        {messages.map((msg) => (\r\n          <div key={msg._id} className=\"chat-message\">\r\n            <strong>{msg.user}:</strong> {msg.message}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"chat-input\">\r\n        <div className=\"input-wrapper\">\r\n          <FaUserCircle className=\"user-icon\" />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Your Name\"\r\n            value={user}\r\n            onChange={(e) => setUser(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"input-wrapper\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Type your message...\"\r\n            value={message}\r\n            onChange={(e) => setMessage(e.target.value)}\r\n          />\r\n          <button onClick={sendMessage}>\r\n            <FaPaperPlane className=\"send-icon\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}